name: Fotek CRM CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  BACKEND_IMAGE: fotekcrm/backend
  FRONTEND_IMAGE: fotekcrm/frontend

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json
    
    # Backend Tests
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test
      
    - name: Backend Build Test
      working-directory: ./backend
      run: npm run build
    
    # Frontend Tests  
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run Frontend Lint
      working-directory: ./frontend
      run: npm run lint
      
    - name: Frontend Build Test
      working-directory: ./frontend
      run: npm run build

  docker-build:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata for Backend
      id: backend-meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.BACKEND_IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ steps.backend-meta.outputs.tags }}
        labels: ${{ steps.backend-meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Extract metadata for Frontend
      id: frontend-meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.FRONTEND_IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ steps.frontend-meta.outputs.tags }}
        labels: ${{ steps.frontend-meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  docker-compose-test:
    name: Docker Compose Integration Test
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Start services
      run: docker compose up -d --build
      
    - name: Wait for services to be ready
      run: |
        echo "Waiting for services to start..."
        sleep 30
        
    - name: Test API Health
      run: |
        curl -f http://localhost:3000/api/health || exit 1
        
    - name: Test Frontend
      run: |
        curl -f http://localhost:80 || exit 1
        
    - name: Show service logs
      if: failure()
      run: docker compose logs
      
    - name: Stop services
      if: always()
      run: docker compose down 